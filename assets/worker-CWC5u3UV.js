(function(){"use strict";const B="linear",w="linear",Y="random",X="backInOut",q=`WIX ðŸ¤ 
Particles!`,T="#ffffff",H=["#ff0000","#00ff00","#0000ff"],W="left-to-right",Q={fontFamily:"Arial",fontSize:64,italic:!1,weight:600},Z=500,V=300,z=100,G=0,x=1e3,L=500;var h=(t=>(t.INITIALIZE="INITIALIZE",t.PLAY="PLAY",t.RESET="RESET",t.UPDATE_APP_PROPS="UPDATE_APP_PROPS",t.UPDATE_BITMAP="UPDATE_BITMAP",t.RESIZE_PARTICLE_RADIUS="RESIZE_PARTICLE_RADIUS",t.UPDATE_START_POSITION="UPDATE_START_POSITION",t.UPDATE_SELECTED_MOVEMENT_FUNCTION="UPDATE_SELECTED_MOVEMENT_FUNCTION",t.UPDATE_TEXT="UPDATE_TEXT",t.UPDATE_FONT="UPDATE_FONT",t.UPDATE_PARTICLE_COLORS="UPDATE_PARTICLE_COLORS",t.UPDATE_ANIMATION_DURATION="UPDATE_ANIMATION_DURATION",t.UPDATE_PARTICLE_SPREAD="UPDATE_PARTICLE_SPREAD",t.UPDATE_START_PARTICLE_OPACITY="UPDATE_START_PARTICLE_OPACITY",t.UPDATE_END_PARTICLE_OPACITY="UPDATE_END_PARTICLE_OPACITY",t.UPDATE_START_PARTICLE_SIZE="UPDATE_START_PARTICLE_SIZE",t.UPDATE_END_PARTICLE_SIZE="UPDATE_END_PARTICLE_SIZE",t.UPDATE_DELAY="UPDATE_DELAY",t.UPDATE_REVEAL_ANIMATION="UPDATE_REVEAL_ANIMATION",t.UPDATE_REVEAL_DIRECTION="UPDATE_REVEAL_DIRECTION",t))(h||{}),A=(t=>(t.INITIALIZED="INITIALIZED",t.UPDATE_APP_PROPS="UPDATE_APP_PROPS",t.ANIMATION_COMPLETE="ANIMATION_COMPLETE",t))(A||{});const j=t=>t,J=t=>1-Math.cos(t*Math.PI/2),$=t=>Math.sin(t*Math.PI/2),K=t=>-(Math.cos(Math.PI*t)-1)/2,tt=t=>t**2,at=t=>1-(1-t)**2,et=t=>t<.5?2*t**2:1-(-2*t+2)**2/2,nt=t=>t**3,rt=t=>1-(1-t)**3,ot=t=>t<.5?4*t**3:1-(-2*t+2)**3/2,it=t=>t**4,st=t=>1-(1-t)**4,ct=t=>t<.5?8*t**4:1-(-2*t+2)**4/2,lt=t=>t**5,pt=t=>1-(1-t)**5,mt=t=>t<.5?16*t**5:1-(-2*t+2)**5/2,ut=t=>t===0?0:2**(10*t-10),dt=t=>t===1?1:1-2**(-10*t),Pt=t=>t===0?0:t===1?1:t<.5?2**(20*t-10)/2:(2-2**(-20*t+10))/2,ft=t=>1-Math.sqrt(1-t**2),It=t=>Math.sqrt(1-(t-1)**2),Et=t=>t<.5?(1-Math.sqrt(1-4*t**2))/2:(Math.sqrt(-(2*t-3)*(2*t-1))+1)/2,ht=t=>2.70158*t**3-1.70158*t**2,Tt=t=>1+2.70158*(t-1)**3+1.70158*(t-1)**2,At=(t,e=1.70158*1.525)=>t<.5?(2*t)**2*((e+1)*2*t-e)/2:((2*t-2)**2*((e+1)*(t*2-2)+e)+2)/2,u=t=>({targetCoordinates:e,initialCoordinates:n,progress:o})=>{const i=(r,p,m)=>r+m*(p-r),c=t(o),l=i(n.x,e.x,c),s=i(n.y,e.y,c);return Math.abs(l-e.x)<1&&Math.abs(s-e.y)<1?{x:e.x,y:e.y}:{x:l,y:s}},gt={backInOut:{name:"backInOut",displayName:"Back In Out",function:u(At),description:"Back easing with overshoot"},linear:{name:"linear",displayName:"Linear",function:u(j),description:"Constant speed movement"},sineIn:{name:"sineIn",displayName:"Sine In",function:u(J),description:"Slow start, accelerating"},sineOut:{name:"sineOut",displayName:"Sine Out",function:u($),description:"Fast start, decelerating"},sineInOut:{name:"sineInOut",displayName:"Sine In Out",function:u(K),description:"Slow start and end"},quadIn:{name:"quadIn",displayName:"Quad In",function:u(tt),description:"Quadratic acceleration"},quadOut:{name:"quadOut",displayName:"Quad Out",function:u(at),description:"Quadratic deceleration"},quadInOut:{name:"quadInOut",displayName:"Quad In Out",function:u(et),description:"Quadratic acceleration and deceleration"},cubicIn:{name:"cubicIn",displayName:"Cubic In",function:u(nt),description:"Cubic acceleration"},cubicOut:{name:"cubicOut",displayName:"Cubic Out",function:u(rt),description:"Cubic deceleration"},cubicInOut:{name:"cubicInOut",displayName:"Cubic In Out",function:u(ot),description:"Cubic acceleration and deceleration"},quartIn:{name:"quartIn",displayName:"Quart In",function:u(it),description:"Quartic acceleration"},quartOut:{name:"quartOut",displayName:"Quart Out",function:u(st),description:"Quartic deceleration"},quartInOut:{name:"quartInOut",displayName:"Quart In Out",function:u(ct),description:"Quartic acceleration and deceleration"},quintIn:{name:"quintIn",displayName:"Quint In",function:u(lt),description:"Quintic acceleration"},quintOut:{name:"quintOut",displayName:"Quint Out",function:u(pt),description:"Quintic deceleration"},quintInOut:{name:"quintInOut",displayName:"Quint In Out",function:u(mt),description:"Quintic acceleration and deceleration"},expoIn:{name:"expoIn",displayName:"Expo In",function:u(ut),description:"Exponential acceleration"},expoOut:{name:"expoOut",displayName:"Expo Out",function:u(dt),description:"Exponential deceleration"},expoInOut:{name:"expoInOut",displayName:"Expo In Out",function:u(Pt),description:"Exponential acceleration and deceleration"},circIn:{name:"circIn",displayName:"Circ In",function:u(ft),description:"Circular acceleration"},circOut:{name:"circOut",displayName:"Circ Out",function:u(It),description:"Circular deceleration"},circInOut:{name:"circInOut",displayName:"Circ In Out",function:u(Et),description:"Circular acceleration and deceleration"},backIn:{name:"backIn",displayName:"Back In",function:u(ht),description:"Back with overshoot at start"},backOut:{name:"backOut",displayName:"Back Out",function:u(Tt),description:"Back with overshoot at end"}},_t=t=>{var e;return((e=gt[t])==null?void 0:e.function)||null},C=(t,e)=>{const{width:o,height:i,data:c}=t,l=Math.ceil(o/e),s=Math.ceil(i/e),r=new Uint8Array(Math.ceil(o/e)*Math.ceil(i/e));let p=0;for(let m=0;m<i;m+=e)for(let d=0;d<o;d+=e){let P=!1;for(let I=0;I<e&&!P;I++)for(let f=0;f<e&&!P;f++){const E=d+f,_=m+I;if(E<o&&_<i){const b=(_*o+E)*4;c[b+3]>10&&(P=!0)}}r[p++]=P?1:0}return{validBlocks:r,blockWidth:l,blockHeight:s}},M=(t,e,n)=>t+n*(e-t),Ct=t=>{t=t.replace(/^#/,"");const e=parseInt(t,16),n=e>>16&255,o=e>>8&255,i=e&255;return{r:n,g:o,b:i}},Mt=t=>{const e=t.match(/hsl\((\d+),\s*(\d+)%,\s*(\d+)%\)/);if(!e)return console.warn("Invalid HSL color format:",t),{r:0,g:0,b:0};const n=parseInt(e[1])/360,o=parseInt(e[2])/100,i=parseInt(e[3])/100,c=(p,m,d)=>(d<0&&(d+=1),d>1&&(d-=1),d<1/6?p+(m-p)*6*d:d<1/2?m:d<2/3?p+(m-p)*(2/3-d)*6:p);let l,s,r;if(o===0)l=s=r=i;else{const p=i<.5?i*(1+o):i+o-i*o,m=2*i-p;l=c(m,p,n+1/3),s=c(m,p,n),r=c(m,p,n-1/3)}return{r:Math.round(l*255),g:Math.round(s*255),b:Math.round(r*255)}},v=t=>{if(!t||typeof t!="string")throw new Error(`Invalid color string provided to parseColor: ${JSON.stringify(t)}`);return t.startsWith("hsl(")?Mt(t):Ct(t)},Ot=(t,e,n)=>"#"+((1<<24)+(t<<16)+(e<<8)+n).toString(16).slice(1),N=(t,e)=>{if(!(t!=null&&t.length))return"#ffffff";const n=t.filter(P=>P&&typeof P=="string");if(!n.length)throw new Error(`Invalid colors provided to getColorFromProgress: ${JSON.stringify(t)}`);if(n.length===1)return n[0];const i=Math.max(0,Math.min(1,e))*(n.length-1),c=Math.floor(i);if(c===n.length-1)return n[n.length-1];const l=i-c,s=v(n[c]),r=v(n[c+1]),p=Math.round(M(s.r,r.r,l)),m=Math.round(M(s.g,r.g,l)),d=Math.round(M(s.b,r.b,l));return Ot(p,m,d)},O=({dimensions:{width:t,height:e},emitterX:n=t/2,emitterY:o=e/2,emitterSize:i=100,emitterAngle:c=0})=>({top:()=>({x:Math.random()*t,y:0}),center:()=>({x:Math.round(t/2),y:Math.round(e/2)}),bottom:()=>({x:Math.random()*t,y:e}),random:()=>({x:Math.random()*t,y:Math.random()*e}),left:()=>({x:0,y:Math.random()*e}),right:()=>({x:t,y:Math.random()*e}),"top-left":()=>({x:Math.random()*(t/5),y:Math.random()*(e/5)}),"top-right":()=>({x:t,y:Math.random()*(e/5)}),"bottom-left":()=>({x:Math.random()*(t/5),y:e-Math.random()*(e/5)}),"bottom-right":()=>({x:t-Math.random()*(t/5),y:e-Math.random()*(e/5)}),canvasEdges:()=>{const s=Math.floor(Math.random()*4);return s===0?{x:Math.random()*t,y:0}:s===1?{x:Math.random()*t,y:e}:s===2?{x:0,y:Math.random()*e}:{x:t,y:Math.random()*e}},topLeft:()=>({x:0,y:0}),emitterPoint:()=>({x:n,y:o}),emitterCircle:()=>{const s=Math.random()*2*Math.PI,r=Math.random()*i;return{x:n+r*Math.cos(s),y:o+r*Math.sin(s)}},emitterSquare:()=>({x:n+(Math.random()-.5)*i,y:o+(Math.random()-.5)*i}),emitterHLine:()=>{const s=c*(Math.PI/180),r=(Math.random()-.5)*i;return{x:n+r*Math.cos(s),y:o+r*Math.sin(s)}},emitterVLine:()=>{const s=(c+90)*(Math.PI/180),r=(Math.random()-.5)*i;return{x:n+r*Math.cos(s),y:o+r*Math.sin(s)}},enterTopTextWidth:()=>({x:t*.2+Math.random()*t*.6,y:e*.3}),enterBottomTextWidth:()=>({x:t*.2+Math.random()*t*.6,y:e*.7}),enterLeftTextHeight:()=>({x:t*.2,y:e*.3+Math.random()*e*.4}),enterRightTextHeight:()=>({x:t*.8,y:e*.3+Math.random()*e*.4})}),U={particleRadius:5,startPosition:Y,selectedMovementFunction:X,text:q,font:Q,particleColors:H,animationDuration:3e3,particleSpread:3,startParticleOpacity:1,endParticleOpacity:1,startParticleSize:5,endParticleSize:1,particleSizeEasing:B,particleOpacityEasing:w,delay:0,emitterX:Z,emitterY:V,emitterSize:z,emitterAngle:G,enableRevealAnimation:!1,revealDirection:W,turbulence:.8,windSpeed:1},a={workerParticles:[],imageBitmap:null,animationFrameId:0,frameCanvas:null,frameContext:null,mainCanvas:null,mainContext:null,validBlocks:null,blockHeight:0,blockWidth:0,appProps:U,revealProgress:0,effectParticles:[]};let g;const yt=async t=>{a.mainCanvas=t,a.mainContext=a.mainCanvas.getContext("bitmaprenderer"),a.frameCanvas=new OffscreenCanvas(a.mainCanvas.width,a.mainCanvas.height),a.frameContext=a.frameCanvas.getContext("2d",{willReadFrequently:!0})},Rt=t=>{const{imageBitmap:e,canvas:n,dimensions:o,appProps:i}=t;a.imageBitmap=e,Object.keys(i).length&&(a.appProps={...U,...i}),yt(n),a.frameContext.drawImage(a.imageBitmap,0,0);const{validBlocks:c,blockHeight:l,blockWidth:s}=C(a.frameContext.getImageData(0,0,a.mainCanvas.width,a.mainCanvas.height),a.appProps.particleRadius);a.validBlocks=c,a.blockHeight=l,a.blockWidth=s,g=O({dimensions:o,emitterX:a.appProps.emitterX,emitterY:a.appProps.emitterY,emitterSize:a.appProps.emitterSize,emitterAngle:a.appProps.emitterAngle}),a.workerParticles=y({validBlocks:a.validBlocks,radius:a.appProps.particleRadius,blockHeight:a.blockHeight,blockWidth:a.blockWidth,startPosition:a.appProps.startPosition,delay:a.appProps.delay,animationDuration:a.appProps.animationDuration,revealAnimation:a.appProps.enableRevealAnimation}),self.postMessage({type:A.INITIALIZED,data:a.appProps})},y=({validBlocks:t,radius:e,blockHeight:n,blockWidth:o,startPosition:i,delay:c,animationDuration:l,revealAnimation:s})=>{const r=[];for(let p=0;p<n;p++)for(let m=0;m<o;m++){const d=p*o+m;if(t[d]){const P=m*e,I=p*e,{x:f,y:E}=s?{x:P,y:I}:g[i](),_=s?0:Math.random()*c,b=l-_;r.push({targetX:P,targetY:I,x:f,y:E,initialX:f,initialY:E,scale:1,opacity:1,color:T,revealProgress:0,revealThreshold:.97+Math.random()*.02,reachedTarget:!1,emittedBubbles:!1,delay:_,lifetime:b,radius:e})}}return r},Dt=t=>{if(t.length===0)return{width:0,height:0,minX:0,minY:0,maxX:0,maxY:0};let e=1/0,n=1/0,o=-1/0,i=-1/0;return t.forEach(c=>{e=Math.min(e,c.targetX),n=Math.min(n,c.targetY),o=Math.max(o,c.targetX+a.appProps.particleRadius),i=Math.max(i,c.targetY+a.appProps.particleRadius)}),{minX:e,minY:n,maxX:o,maxY:i,width:o-e,height:i-n}},bt=(t,e,n,o)=>{switch(n){case"left-to-right":{const i=o.minX+e*o.width;return t.targetX<=i}case"right-to-left":{const i=o.maxX-e*o.width;return t.targetX>=i}case"top-to-bottom":{const i=o.minY+e*o.height;return t.targetY<=i}case"bottom-to-top":{const i=o.maxY-e*o.height;return t.targetY>=i}default:return!0}},xt=(t,e)=>{if(e>(t.revealThreshold||.99))return 1;if(e>.85&&Math.sqrt(Math.pow(t.x-t.targetX,2)+Math.pow(t.y-t.targetY,2))<=5){const i=(t.revealThreshold||.99)-.02,c=Math.max(0,(e-i)/.02);return Math.min(1,c)}return 0},k=t=>{const e=a.appProps.startParticleOpacity,n=a.appProps.endParticleOpacity,o=Lt(t,a.appProps.particleOpacityEasing);if(a.appProps.particleOpacityEasing!=="linear"){const i=Math.min(e,n),c=Math.max(e,n);return i+(c-i)*o}return e+(n-e)*o},Lt=(t,e)=>{switch(e){case"bell":return Math.sin(t*Math.PI);case"linear":return t;case"multiPulse":const o=t*5%1;return Math.sin(o*Math.PI);default:return 1}},vt=(t,e)=>{switch(e){case"bell":return Math.sin(t*Math.PI);case"linear":return t;case"multiPulse":const o=t*5%1;return Math.sin(o*Math.PI);default:return 1}},F=t=>{const e=a.appProps.startParticleSize,n=a.appProps.endParticleSize,o=vt(t,a.appProps.particleSizeEasing);if(a.appProps.particleSizeEasing!=="linear"){const i=Math.min(e,n),c=Math.max(e,n);return i+(c-i)*o}return e+(n-e)*o},R=(t,e,n=!0)=>{const o=k(e),i=F(e),c=t.radius*i;let l;try{l=a.appProps.particleColors.length?N(a.appProps.particleColors,e):t.color,(!l||typeof l!="string")&&(l=T)}catch(p){console.warn("Error getting particle color:",p),l=T}const s=n?Math.floor(t.x)+c/2:Math.floor(t.x),r=n?Math.floor(t.y)+c/2:Math.floor(t.y);a.frameContext.globalAlpha=o,a.frameContext.beginPath(),a.frameContext.arc(s,r,c/2,0,2*Math.PI),a.frameContext.fillStyle=l,a.frameContext.fill()},Nt=(t,e)=>{const n=[],o=3+Math.floor(Math.random()*3),i=0;for(let c=0;c<o;c++){let l=0,s=0;const r=a.appProps.windSpeed*(.5+Math.random()*1);switch(a.appProps.revealDirection){case"left-to-right":l=r,s=0;break;case"right-to-left":l=-r,s=0;break;case"top-to-bottom":l=0,s=r;break;case"bottom-to-top":l=0,s=-r;break}const p=a.appProps.turbulence,m=l+(Math.random()-.5)*p,d=s+(Math.random()-.5)*p;n.push({x:t.x+a.appProps.particleRadius/2,y:t.y+a.appProps.particleRadius/2,vx:m,vy:d,startTime:e,lifetime:L+Math.random()*(x-L),radius:a.appProps.particleRadius,opacity:1,progress:i,color:(()=>{try{return a.appProps.particleColors.length?N(a.appProps.particleColors,i):T}catch(P){return console.warn("Error getting effect particle color:",P),T}})()})}return n},S=(t,e,n)=>{a.frameContext.clearRect(0,0,a.frameCanvas.width,a.frameCanvas.height);const o=e-t,i=a.appProps.animationDuration-x;a.revealProgress=Math.min(1,o/a.appProps.animationDuration);const c=Math.min(1,o/i);a.frameContext.globalAlpha=1,a.workerParticles.forEach((s,r)=>{if(bt(s,c,a.appProps.revealDirection,n)){if(!s.emittedBubbles&&(s.emittedBubbles=!0,r%2===0)){const m=Nt(s,e);a.effectParticles.push(...m)}a.frameContext.drawImage(a.imageBitmap,s.targetX,s.targetY,a.appProps.particleRadius,a.appProps.particleRadius,Math.floor(s.x),Math.floor(s.y),a.appProps.particleRadius,a.appProps.particleRadius)}});for(let s=a.effectParticles.length-1;s>=0;s--){const r=a.effectParticles[s],p=e-r.startTime;if(r.progress=Math.min(1,p/r.lifetime),r.progress>=1){a.effectParticles.splice(s,1);continue}r.x+=r.vx,r.y+=r.vy,r.vx*=.99,r.vy*=.99,R(r,r.progress,!1)}a.frameContext.globalAlpha=1;const l=a.frameCanvas.transferToImageBitmap();if(a.mainContext.transferFromImageBitmap(l),a.revealProgress<1)a.animationFrameId=requestAnimationFrame(s=>S(t,s,n));else{a.frameContext.drawImage(a.imageBitmap,0,0);const s=a.frameCanvas.transferToImageBitmap();a.mainContext.transferFromImageBitmap(s),a.effectParticles=[],a.workerParticles.forEach(r=>{r.emittedBubbles=!1}),self.postMessage({type:A.ANIMATION_COMPLETE})}},D=(t,e)=>{let n=!0;a.frameContext.clearRect(0,0,a.frameCanvas.width,a.frameCanvas.height);const o=e-t;a.revealProgress=Math.min(1,o/a.appProps.animationDuration),a.frameContext.globalAlpha=1,a.workerParticles.forEach(r=>{if(r.delay>e-t)return;const p=o-r.delay,m=Math.max(0,Math.min(1,p/r.lifetime)),d=_t(a.appProps.selectedMovementFunction);if(d){const E=d({targetCoordinates:{x:r.targetX,y:r.targetY},initialCoordinates:{x:r.initialX,y:r.initialY},progress:a.revealProgress});r.x=E.x,r.y=E.y}const P=xt(r,a.revealProgress),I=k(m),f=F(m);P>0&&P<1?(R(r,m,!0),a.frameContext.globalAlpha=P*I,a.frameContext.drawImage(a.imageBitmap,r.targetX,r.targetY,f,f,Math.floor(r.x),Math.floor(r.y),f,f)):P>=1?(a.frameContext.globalAlpha=1,a.frameContext.drawImage(a.imageBitmap,r.targetX,r.targetY,a.appProps.particleRadius,a.appProps.particleRadius,Math.floor(r.x),Math.floor(r.y),a.appProps.particleRadius,a.appProps.particleRadius)):R(r,m,!0),(r.x!==r.targetX||r.y!==r.targetY||a.revealProgress<.99)&&(n=!1)});const i=a.frameCanvas.transferToImageBitmap();a.mainContext.transferFromImageBitmap(i);const c=n&&a.revealProgress>=1,l=a.appProps.animationDuration;c&&o>=l?a.animationFrameId&&(cancelAnimationFrame(a.animationFrameId),a.frameContext.drawImage(a.imageBitmap,0,0),self.postMessage({type:A.ANIMATION_COMPLETE})):a.animationFrameId=requestAnimationFrame(r=>D(t,r))},Ut=()=>{a.animationFrameId&&cancelAnimationFrame(a.animationFrameId),a.effectParticles=[];const t=performance.now();if(a.revealProgress=0,a.appProps.enableRevealAnimation){const e=Dt(a.workerParticles);a.frameContext.globalAlpha=1,a.workerParticles.forEach(n=>{n.emittedBubbles=!1}),S(t,t,e)}else D(t,t)},kt=()=>{a.animationFrameId&&cancelAnimationFrame(a.animationFrameId),a.effectParticles=[],a.workerParticles=a.workerParticles.map(e=>{const n=g[a.appProps.startPosition](),o=Math.random()*a.appProps.delay,i=a.appProps.animationDuration-o;return{x:n.x,y:n.y,initialX:n.x,initialY:n.y,targetX:e.targetX,targetY:e.targetY,scale:1,opacity:1,color:e.color,revealProgress:0,revealThreshold:e.revealThreshold,reachedTarget:!1,emittedBubbles:!1,delay:o,lifetime:i,radius:a.appProps.particleRadius}}),a.frameContext.clearRect(0,0,a.frameCanvas.width,a.frameCanvas.height);const t=a.frameCanvas.transferToImageBitmap();a.mainContext.transferFromImageBitmap(t),a.animationFrameId&&cancelAnimationFrame(a.animationFrameId)},Ft=t=>{if(a.imageBitmap=t,a.frameCanvas&&a.mainCanvas){a.frameCanvas.width=a.imageBitmap.width,a.frameCanvas.height=a.imageBitmap.height,a.mainCanvas.width=a.imageBitmap.width,a.mainCanvas.height=a.imageBitmap.height,a.frameContext.drawImage(a.imageBitmap,0,0);const{validBlocks:e,blockHeight:n,blockWidth:o}=C(a.frameContext.getImageData(0,0,a.mainCanvas.width,a.mainCanvas.height),a.appProps.particleRadius);a.validBlocks=e,a.blockHeight=n,a.blockWidth=o,g=O({dimensions:{width:a.mainCanvas.width,height:a.mainCanvas.height},emitterX:a.appProps.emitterX,emitterY:a.appProps.emitterY,emitterSize:a.appProps.emitterSize,emitterAngle:a.appProps.emitterAngle}),a.frameContext.clearRect(0,0,a.frameCanvas.width,a.frameCanvas.height);const i=a.frameCanvas.transferToImageBitmap();a.mainContext.transferFromImageBitmap(i),a.workerParticles=y({validBlocks:a.validBlocks,radius:a.appProps.particleRadius,blockHeight:a.blockHeight,blockWidth:a.blockWidth,startPosition:a.appProps.startPosition,delay:a.appProps.delay,animationDuration:a.appProps.animationDuration,revealAnimation:a.appProps.enableRevealAnimation})}},St=t=>{const{appProps:e,shouldUpdateStartCoordinatesConfig:n,shouldRegenerateImageBlocks:o}=t;if(Object.assign(a.appProps,e),o){a.frameContext.drawImage(a.imageBitmap,0,0);const{validBlocks:i,blockHeight:c,blockWidth:l}=C(a.frameContext.getImageData(0,0,a.mainCanvas.width,a.mainCanvas.height),a.appProps.particleRadius);a.validBlocks=i,a.blockHeight=c,a.blockWidth=l}if(n&&(g=O({dimensions:{width:a.mainCanvas.width,height:a.mainCanvas.height},emitterX:a.appProps.emitterX,emitterY:a.appProps.emitterY,emitterSize:a.appProps.emitterSize,emitterAngle:a.appProps.emitterAngle})),a.workerParticles=y({validBlocks:a.validBlocks??new Uint8Array,radius:a.appProps.particleRadius,blockHeight:a.blockHeight,blockWidth:a.blockWidth,startPosition:a.appProps.startPosition,delay:a.appProps.delay,animationDuration:a.appProps.animationDuration,revealAnimation:a.appProps.enableRevealAnimation}),self.postMessage({type:A.UPDATE_APP_PROPS,data:a.appProps}),a.animationFrameId){cancelAnimationFrame(a.animationFrameId);const i=performance.now();D(i,i)}};self.onmessage=t=>{const{payload:e,type:n}=t.data;switch(n){case h.INITIALIZE:{Rt(e);break}case h.PLAY:{Ut();break}case h.RESET:{kt();break}case h.UPDATE_APP_PROPS:{St(e);break}case h.UPDATE_BITMAP:{Ft(e);break}}}})();
